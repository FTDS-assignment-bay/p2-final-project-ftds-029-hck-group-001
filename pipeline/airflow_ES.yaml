version: '3.4'

x-common:
  &common
  build: .
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - ./data:/tmp
      - ./postgres_data:/var/lib/postgresql/data

  scheduler:
    <<: [*common, *depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    deploy:
      resources:
        limits:
          memory: 4G

  webserver:
    <<: [*common, *depends-on]
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    command: >
      bash -c "
      until PGPASSWORD=$$POSTGRES_PASSWORD psql -h postgres -p 5432 -U $$POSTGRES_USER -d $$POSTGRES_DB -c 'select 1' >/dev/null 2>&1; do
        echo 'Waiting for PostgreSQL...';
        sleep 5;
      done;
      airflow db init;
      airflow users create \
        --username $$AIRFLOW_WWW_USER_USERNAME \
        --password $$AIRFLOW_WWW_USER_PASSWORD \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com || true
      "
    environment:
      - _AIRFLOW_DB_MIGRATE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=false
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow

volumes:
  postgres_data: